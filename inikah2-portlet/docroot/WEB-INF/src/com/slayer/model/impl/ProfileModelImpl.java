/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.slayer.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.slayer.model.Profile;
import com.slayer.model.ProfileModel;
import com.slayer.model.ProfileSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Profile service. Represents a row in the &quot;inikah_Profile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.slayer.model.ProfileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProfileImpl}.
 * </p>
 *
 * @author Ahmed Hasan
 * @see ProfileImpl
 * @see com.slayer.model.Profile
 * @see com.slayer.model.ProfileModel
 * @generated
 */
@JSON(strict = true)
public class ProfileModelImpl extends BaseModelImpl<Profile>
	implements ProfileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a profile model instance should use the {@link com.slayer.model.Profile} interface instead.
	 */
	public static final String TABLE_NAME = "inikah_Profile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "profileId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "field1", Types.VARCHAR },
			{ "field2", Types.VARCHAR },
			{ "field3", Types.VARCHAR },
			{ "field4", Types.VARCHAR },
			{ "field5", Types.VARCHAR },
			{ "field6", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table inikah_Profile (profileId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,field1 VARCHAR(75) null,field2 VARCHAR(75) null,field3 VARCHAR(75) null,field4 VARCHAR(75) null,field5 VARCHAR(75) null,field6 VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table inikah_Profile";
	public static final String ORDER_BY_JPQL = " ORDER BY profile.field1 ASC";
	public static final String ORDER_BY_SQL = " ORDER BY inikah_Profile.field1 ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.slayer.model.Profile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.slayer.model.Profile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Profile toModel(ProfileSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Profile model = new ProfileImpl();

		model.setProfileId(soapModel.getProfileId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setField1(soapModel.getField1());
		model.setField2(soapModel.getField2());
		model.setField3(soapModel.getField3());
		model.setField4(soapModel.getField4());
		model.setField5(soapModel.getField5());
		model.setField6(soapModel.getField6());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Profile> toModels(ProfileSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Profile> models = new ArrayList<Profile>(soapModels.length);

		for (ProfileSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.slayer.model.Profile"));

	public ProfileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _profileId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProfileId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _profileId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Profile.class;
	}

	@Override
	public String getModelClassName() {
		return Profile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("profileId", getProfileId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("field1", getField1());
		attributes.put("field2", getField2());
		attributes.put("field3", getField3());
		attributes.put("field4", getField4());
		attributes.put("field5", getField5());
		attributes.put("field6", getField6());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long profileId = (Long)attributes.get("profileId");

		if (profileId != null) {
			setProfileId(profileId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String field1 = (String)attributes.get("field1");

		if (field1 != null) {
			setField1(field1);
		}

		String field2 = (String)attributes.get("field2");

		if (field2 != null) {
			setField2(field2);
		}

		String field3 = (String)attributes.get("field3");

		if (field3 != null) {
			setField3(field3);
		}

		String field4 = (String)attributes.get("field4");

		if (field4 != null) {
			setField4(field4);
		}

		String field5 = (String)attributes.get("field5");

		if (field5 != null) {
			setField5(field5);
		}

		String field6 = (String)attributes.get("field6");

		if (field6 != null) {
			setField6(field6);
		}
	}

	@JSON
	@Override
	public long getProfileId() {
		return _profileId;
	}

	@Override
	public void setProfileId(long profileId) {
		_profileId = profileId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getField1() {
		if (_field1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _field1;
		}
	}

	@Override
	public void setField1(String field1) {
		_field1 = field1;
	}

	@JSON
	@Override
	public String getField2() {
		if (_field2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _field2;
		}
	}

	@Override
	public void setField2(String field2) {
		_field2 = field2;
	}

	@JSON
	@Override
	public String getField3() {
		if (_field3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _field3;
		}
	}

	@Override
	public void setField3(String field3) {
		_field3 = field3;
	}

	@JSON
	@Override
	public String getField4() {
		if (_field4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _field4;
		}
	}

	@Override
	public void setField4(String field4) {
		_field4 = field4;
	}

	@JSON
	@Override
	public String getField5() {
		if (_field5 == null) {
			return StringPool.BLANK;
		}
		else {
			return _field5;
		}
	}

	@Override
	public void setField5(String field5) {
		_field5 = field5;
	}

	@JSON
	@Override
	public String getField6() {
		if (_field6 == null) {
			return StringPool.BLANK;
		}
		else {
			return _field6;
		}
	}

	@Override
	public void setField6(String field6) {
		_field6 = field6;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Profile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Profile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Profile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProfileImpl profileImpl = new ProfileImpl();

		profileImpl.setProfileId(getProfileId());
		profileImpl.setCompanyId(getCompanyId());
		profileImpl.setUserId(getUserId());
		profileImpl.setUserName(getUserName());
		profileImpl.setCreateDate(getCreateDate());
		profileImpl.setModifiedDate(getModifiedDate());
		profileImpl.setField1(getField1());
		profileImpl.setField2(getField2());
		profileImpl.setField3(getField3());
		profileImpl.setField4(getField4());
		profileImpl.setField5(getField5());
		profileImpl.setField6(getField6());

		profileImpl.resetOriginalValues();

		return profileImpl;
	}

	@Override
	public int compareTo(Profile profile) {
		int value = 0;

		value = getField1().compareTo(profile.getField1());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Profile)) {
			return false;
		}

		Profile profile = (Profile)obj;

		long primaryKey = profile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Profile> toCacheModel() {
		ProfileCacheModel profileCacheModel = new ProfileCacheModel();

		profileCacheModel.profileId = getProfileId();

		profileCacheModel.companyId = getCompanyId();

		profileCacheModel.userId = getUserId();

		profileCacheModel.userName = getUserName();

		String userName = profileCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			profileCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			profileCacheModel.createDate = createDate.getTime();
		}
		else {
			profileCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			profileCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			profileCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		profileCacheModel.field1 = getField1();

		String field1 = profileCacheModel.field1;

		if ((field1 != null) && (field1.length() == 0)) {
			profileCacheModel.field1 = null;
		}

		profileCacheModel.field2 = getField2();

		String field2 = profileCacheModel.field2;

		if ((field2 != null) && (field2.length() == 0)) {
			profileCacheModel.field2 = null;
		}

		profileCacheModel.field3 = getField3();

		String field3 = profileCacheModel.field3;

		if ((field3 != null) && (field3.length() == 0)) {
			profileCacheModel.field3 = null;
		}

		profileCacheModel.field4 = getField4();

		String field4 = profileCacheModel.field4;

		if ((field4 != null) && (field4.length() == 0)) {
			profileCacheModel.field4 = null;
		}

		profileCacheModel.field5 = getField5();

		String field5 = profileCacheModel.field5;

		if ((field5 != null) && (field5.length() == 0)) {
			profileCacheModel.field5 = null;
		}

		profileCacheModel.field6 = getField6();

		String field6 = profileCacheModel.field6;

		if ((field6 != null) && (field6.length() == 0)) {
			profileCacheModel.field6 = null;
		}

		return profileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{profileId=");
		sb.append(getProfileId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", field1=");
		sb.append(getField1());
		sb.append(", field2=");
		sb.append(getField2());
		sb.append(", field3=");
		sb.append(getField3());
		sb.append(", field4=");
		sb.append(getField4());
		sb.append(", field5=");
		sb.append(getField5());
		sb.append(", field6=");
		sb.append(getField6());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.slayer.model.Profile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>profileId</column-name><column-value><![CDATA[");
		sb.append(getProfileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field1</column-name><column-value><![CDATA[");
		sb.append(getField1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field2</column-name><column-value><![CDATA[");
		sb.append(getField2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field3</column-name><column-value><![CDATA[");
		sb.append(getField3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field4</column-name><column-value><![CDATA[");
		sb.append(getField4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field5</column-name><column-value><![CDATA[");
		sb.append(getField5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field6</column-name><column-value><![CDATA[");
		sb.append(getField6());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Profile.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Profile.class
		};
	private long _profileId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _field1;
	private String _field2;
	private String _field3;
	private String _field4;
	private String _field5;
	private String _field6;
	private Profile _escapedModel;
}