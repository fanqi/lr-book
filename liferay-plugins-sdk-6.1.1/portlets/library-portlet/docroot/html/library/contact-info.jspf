<%@page import="com.liferay.portal.model.Country"%>
<%@page import="com.liferay.portal.service.CountryServiceUtil"%>

<br/>
<liferay-ui:panel-container extended="true">
	<liferay-ui:panel title="Author Address" collapsible="true"
		defaultState="collapsed"
		helpMessage="Optionally enter Author's address details">

		<aui:input name="saveAddress" type="checkbox"
			label="Save Author Address"/>

		<aui:select name="countryId" 
			onChange="javascript:listRegions(this);"/>
		<aui:select name="regionId"/>
		
		<aui:input name="city"/>
		<aui:input name="street1"/>
		<aui:input name="street2"/>
		<aui:input name="zip"/>

		<aui:input name="mobile-phone" label="Mobile Phone"/>
		<aui:input name="business" label="Business Phone"/>
	</liferay-ui:panel>
</liferay-ui:panel-container>
<br/>

<aui:script>
	AUI().ready(function(A){
		var frm = document.<portlet:namespace/>fm;
		var countries = frm.<portlet:namespace/>countryId;
		
		Liferay.Service(
		  	'/country/get-countries',
		  	{ active: true },
		  	function(obj) {
		  		for (var key in obj) {
		   			if (obj.hasOwnProperty(key)) {
		      			var name = obj[key].name;
		      			var countryId = obj[key].countryId;
		      			countries.options[key] = new Option(name,countryId);
		     		}
				}
		    }
		);
	});
	
	function listRegions(country) {
		var frm = document.<portlet:namespace/>fm;
		var regions = frm.<portlet:namespace/>regionId;
		
		var _countryId = country.value;

		regions.disabled = (_countryId <= 0);
		
		if (_countryId <= 0) {
			regions.selectedIndex = 0;
		} else {
			// calling regions of this country
			var payload = {
				countryId: _countryId,
				active: true
			};
			
			Liferay.Service.Portal.Region.getRegions(payload,
				function(data) {
					alert(data.toSource());

					regions.options.length = data.length;
					for (var i=0; i<(data.length-1); i++) {
						var rgn = data[i];
						regions.options[i] = 
							new Option(rgn.name, rgn.regionId);
					}

				}
			);
		}
	}
</aui:script>