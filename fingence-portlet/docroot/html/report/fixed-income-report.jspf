<%
	int fixedIncomeReportType = GetterUtil.getInteger(portletSession.getAttribute("FIXED_INCOME_REPORT_TYPE"), IConstants.FIXED_INCOME_TYPE_BONDS_MATURITY);
%>

<c:choose>
	<c:when test="<%= (fixedIncomeReportType == IConstants.FIXED_INCOME_TYPE_BONDS_QUALITY) %>">
		<%@ include file="/html/report/fixed-income/bonds-quality.jspf"%>
	</c:when>
	<c:when test="<%= (fixedIncomeReportType == IConstants.FIXED_INCOME_TYPE_CASH_FLOW) %>">
		<%@ include file="/html/report/fixed-income/cash-flow.jspf"%>
	</c:when>
	<c:otherwise>
		<%@ include file="/html/report/fixed-income/bonds-maturity.jspf"%>
	</c:otherwise>
</c:choose>

<aui:script>
	function appendSummaryRow(data) {
	
		var dataWithSummary = data.slice();
		
		var summaryRow = {};
		summaryRow.summary = true;
		summaryRow.bucket = '<b>Total</b>';
		summaryRow.market_value = 0.0;
		summaryRow.bond_holdings_percent = 0.0;
		summaryRow.total_holdings_percent = 0.0;
		
		_.each(data, function(item){
			summaryRow.market_value += item.market_value;
			summaryRow.bond_holdings_percent += item.bond_holdings_percent;
			summaryRow.total_holdings_percent += item.total_holdings_percent
		});
		
		dataWithSummary.push(summaryRow);
		
		return dataWithSummary;
	}
	
	function showDataTable(data, divId, title) {
	
		var dataWithSummary = appendSummaryRow(data);
			
		YUI().use(
			'aui-datatable',
		  	function(Y) {
		    	var columns = [
		    		{
		    			key: 'bucket', 
		    			label: title, 
			 			formatter: function(obj) {
			 				if (obj.data.summary) {
			 					obj.value = '<b>' + obj.value + '</b>';
			 				} else {
			 					obj.value = '<a href="#portfolioDetails" onclick="javascript:showDetails(\'' + obj.value + '\');">' + obj.value + '</a>';
			 				}
			 			},		    			
		    			allowHTML: true
		    		},
			 		{
			 			key: 'market_value',
			 			label: 'Market Value<br/>in USD',
			 			formatter: function(obj) {
			 				obj.value = formatCustom(obj.value, 'amount');
			 				if (obj.data.summary) {	
			 					obj.value = '<b>' + obj.value + '</b>';
			 				} 
			 			},
			 			allowHTML: true
			 		},
					{
						key: 'bond_holdings_percent',
						label: '% of Bond<br/>Holdings',
						formatter: function(obj) {
							obj.value = formatCustom(obj.value, 'percent');
							if (obj.data.summary) {	
			 					obj.value = '<b>' + obj.value + '</b>';
			 				}
						},
			 			allowHTML: true
					},
					{
						key: 'total_holdings_percent',
						label: '% of Total<br/>Holdings' ,
						formatter: function(obj) {
							obj.value = formatCustom(obj.value, 'percent');
							if (obj.data.summary) {	
			 					obj.value = '<b>' + obj.value + '</b>';
			 				}
						},
			 			allowHTML: true
					}				 		
		   	 	];
		   
		   		new Y.DataTable({
					columnset: columns,
				    recordset: dataWithSummary
				}).render(divId);
		  	}
		);
	}
	
	function showDetails(bucketName) {
	
		var serviceName = eval('<%= (fixedIncomeReportType == IConstants.FIXED_INCOME_TYPE_BONDS_QUALITY) %>')?
			'/fingence-portlet.myresult/get-bonds-by-quality':
			'/fingence-portlet.myresult/get-bonds-by-maturity';
					
		Liferay.Service(
			serviceName,
			{
				bucketName: bucketName,
				portfolioIds : '<%= portfolioIds %>'
			},
			function(data) {
				var ajaxURL = Liferay.PortletURL.createResourceURL();
				ajaxURL.setPortletId('report_WAR_fingenceportlet');
				ajaxURL.setParameter('<%= Constants.CMD %>', '<%= IConstants.CMD_GET_NET_WORTH %>');
				ajaxURL.setWindowState('exclusive');
				ajaxURL.setParameter('portfolioIds', '<%= portfolioIds %>');
				
				AUI().io.request('<%= themeDisplay.getURLPortal() %>' + ajaxURL, {
					sync: true,
					on: {
						success: function() {
							displayItemsGrid(data, '#portfolioDetails', this.get('responseData'));
						}
					}
				});
			}
		);
	}
</aui:script>